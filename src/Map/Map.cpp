#include "../Header.h"

using namespace std;

Map::Map(double W, double H)
{
	screenW = W;
	screenH = H;
	double t_width = t[0].get_w(), t_height = t[0].get_h();
	int i, j = 0;

	n_tiles = 2 * (H / t_height) + (2 * (W / t_width));
	//Left wall
	for (i = 0; i < H / t_height; i++) 
	{
		t[i].x_p = 0.0;
		t[i].y_p = t_height * i;
	}
	j = j + i;
	//Top wall
	for (i = 0; i < W / t_width; i++) 
	{
		t[i + j].x_p = (i + 1.0) * t_width;
		t[i + j].y_p = H - t_height;
	}
	j = j + i;
	//Right wall
	for (i = 0; i < H / t_height; i++)
	{
		t[i + j].x_p = W - t_width;
		t[i + j].y_p = H - (i + 1.0) * t_height;
	}
	j = j + i;
	//Bottom wall
	for (i = 0; i < W / t_width; i++) 
	{
		t[i + j].x_p = W - (i + 1.0) * t_width;
		t[i + j].y_p = -0.1;
	}

	setMap();
}

void Map::drawMap()
{
	int i = 0;
	while (i < n_tiles) 
	{
		t[i].draw();
		i++;
	}
}

void Map::drawMap2()
{
	float tilesX = screenW / t[0].get_w(), tilesY = screenH / t[0].get_h();
	for (int i = 0; i < size(map_t); i++) 
	{
		if (map_t[i] == "#") 
		{

		}
		else if (map_t[i] == "*") 
		{
			
		}
	}

}

void Map::setMap()
{
	string m[] = {
		"##################################################",
		"#*********************#***********#**************#",
		"#*********************#***********#**************#",
		"#*********************##*##########**************#",
		"#************************************************#",
		"#************************************************#",
		"#************************************************#",
		"#****####****************************************#",
		"#****#***#***************************************#",
		"#****#**#****************************************#",
		"#****#*#*****************************************#",
		"#****##***************************#***############",
		"#****#****************************#**************#",
		"#*********************************#**************#",
		"#*********************************#**************#",
		"##################################################"
	};
	/*for (int i = 0; i < size(m); i++) {
		map_t[i] = m[i];
	}*/
}
